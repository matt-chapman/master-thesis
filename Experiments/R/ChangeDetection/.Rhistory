debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
abline(v=30)
abline(v=35)
abline(v=34)
abline(v=32)
abline(v=33)
abline(v=40)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
ComparePenalties(rabobank)
ComparePenalties(input=rabobank)
GetPenalties(input=rabobank)
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
GetPenalties(input=rabobank)
ComparePenalties(input=rabobank)
RunExperiment(input=rabobank, daily = TRUE)
ComparePenalties(input=rabobank)
GetPenalties(input=rabobank)
RunExperiment(input=rabobank, daily = TRUE)
plot(cars)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(rabobank)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(rabobank)
install.packages("DiagrammeR")
library(DiagrammeR)
grViz("
digraph {
layout = twopi
node [shape = circle]
A -> {B C D}
}")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
hist(rabodata)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
hist(rabodata$Freq)
hist(redditdata$Freq)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
par(mfrow = c(1,3))
hist(norm)
hist(binom)
hist(pois)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
par(mfrow = c(3,1))
hist(norm)
hist(binom)
hist(pois)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
par(mfrow = c(1,3))
hist(norm)
hist(binom)
hist(pois)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(1,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(3,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 1)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, mean = 10)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, mean = 100)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq)
hist(redditdata$Freq)
hist(ingdata$Freq)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq)
hist(redditdata$Freq)
hist(ingdata$Freq)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq)
hist(redditdata$Freq)
hist(ingdata$Freq)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,3))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq)
hist(redditdata$Freq)
hist(ingdata$Freq)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
#set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
#set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
#set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,3))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq, main="Rabobank")
hist(redditdata$Freq, main="Reddit")
hist(ingdata$Freq, main="ING")
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,3))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq, main="Rabobank", ylab = "Postings")
hist(redditdata$Freq, main="Reddit", ylab = "Postings")
hist(ingdata$Freq, main="ING", ylab = "Postings")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,3))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq, main="Rabobank", xlab = "Postings")
hist(redditdata$Freq, main="Reddit", xlab = "Postings")
hist(ingdata$Freq, main="ING", xlab = "Postings")
RunExperiment(ing)
RunExperiment(reddit)
RunExperiment(rabobank)
RunExperiment(reddit)
RunExperiment(ing)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(ing)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(ing)
RunExperiment(rabobank)
RunExperiment(ing)
RunExperiment(rabobank)
RunExperiment(reddit)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(reddit)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(reddit)
library(ROCR)
install.packages("ROCR")
library(ROCR)
y <- c(T,T,F,F)
predictions <- c(T,F,F,F)
pred <- prediction(predictions, y)
pred <- prediction(c(0.1,.5,.3,.8,.9,.4,.9,.5), c(0,0,0,1,1,1,1,1))
perf <- performance(pred, "tpr", "fpr")
plot(perf)
data("ROCR.simple")
predictions <- c(1,1,0,0)
labels <- c(1,0,1,0)
pred <- prediction(predictions, labels)
plot(pred)
pred
RP.perf <- performance(pred,"f")
plot(RP.perf)
predict <- sample(c(0,1), 20, replace=T)
true <- sample(c(0,1), 20, replace=T)
pred <- prediction(predictions = predict, labels = true)
RP.perf <- performance(pred, "f")
plot(RP.perf)
predict <- sample(c(0,1), 20, replace=T)
true <- sample(c(0,1), 20, replace=T)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(ing)
mean.pelt@cpts
vec <- 1:10
vec
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("ing")
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("ing")
groundtruth
as.numeric(dataset[groundtruth[1]])
dataset[1]
dataset[,1]
dataset[1,]
as.numeric(dataset$Date[1,])
as.numeric(dataset$Date[1])
with(dataset)
dataset[groundtruth[1],]
dataset[groundtruth[,1],]
dataset[groundtruth[1,],]
test <- dataset[dataset$date == groundtruth[,1]]
test <- dataset[dataset$Date == groundtruth[,1]]
test <- dataset[dataset$Date == groundtruth[1]]
test <- dataset[dataset$Date = groundtruth[1]]
test <- dataset[dataset$Date == as.Date(groundtruth[1])]
test <- dataset[dataset$Date == as.Date(groundtruth[,1])]
groundtruth[,1]
groundtruth[1,]
test <- dataset[dataset$Date == as.Date(groundtruth[1,])]
test <- dataset[dataset$Date == groundtruth[1,]]
class(dataset)
class(groundtruth)
groundtruth$X1
groundtruth$X1[1]
groundtruth$X1[2]
groundtruth$X1[1]
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("ing")
dataset[groundtruth[1]]
dataset[groundtruth[1]]
dataset[as.numeric(groundtruth[1])]
dataset[as.Date(groundtruth[1])]
dataset[groundtruth[1]]
dataset[[groundtruth[1]]]
dataset[[groundtruth[1]]
]
dataset[[]]
dataset[[2]]
dataset[[1]]
dataset[[Date]]
dataset$Date
dataset$Date[groundtruth[1]]
dataset$Date[groundtruth[2]]
dataset$Date[groundtruth[3]]
dataset$Date[groundtruth[0]]
dataset$Date[groundtruth[1]]
as.Date(dataset$Date[groundtruth[1]])
dataset$Date[groundtruth[1]]
dataset$Date
which(dataset$Date == groundtruth[1])
which(dataset$Date == groundtruth[2])
which(dataset$Date == groundtruth[1])
?append
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("ing")
for(i in groundtruth) { cat(i) }
for(i in groundtruth) { print(i) }
i
?foreach
??foreach
x <- foreach(groundtruth) %do% which(dataset$Date == groundtruth)
library(foreach)
x <- foreach(groundtruth) %do% which(dataset$Date == groundtruth)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("ing")
x <- foreach(i=groundtruth) %do% which(dataset$Date == i)
x
x[1]
x[2]
class(x)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
install.packages(c("Matrix", "Rcpp", "RcppArmadillo", "backports", "devtools", "foreign", "jsonlite", "knitr", "readr", "tibble"))
library("foreach", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("ing")
groundtruth[[1]]
groundtruth[[2]]
groundtruth[1
]
groundtruth[1]
groundtruth[2]
groundtruth.indexed[2]
groundtruth.indexed[1]
groundtruth.indexed[[1]]
groundtruth.indexed[[2]]
groundtruth.indexed[[1]]
for (i in groundtruth.indexed) { print(i) }
GetGroundTruth("ing")
gt <- GetGroundTruth("ing")
gt.indexed <- foreach(i=groundtruth) %do% which(dataset$Date == i)
gt.indexed <- foreach(i=gt) %do% which(dataset$Date == i)
dataset <- ProcessData("ing")
gt.indexed <- foreach(i=gt) %do% which(dataset$Date == i)
gt.indexed
for(i in gt.indexed) { print(i)}
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("ing")
RunExperiment("rabobank")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("rabobank")
RunExperiment("rabobank")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("rabobank")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
addinexamples:::reformatAddin()
as.Date(c("2017-05-04", "2017-05-03"))
x <- as.Date(c("2017-05-04", "2017-05-03"))
x
class(x)
for ( i in x ) { print(i) }
library(foreach)
foreach(i=x) %do% print(i)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
CalculateF1(c(12,23,34), c(12), c(12,23))
CalculateF1(c(1,3,5,7,9), c(2,3), c(2,3,4))
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
CalculateF1(c(1,3,5,7,9), c(2,3), c(2,3,4))
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
CalculateF1(c(1,3,5,7,9), c(2,3), c(2,3,4))
library(ggplot2)
qplot(perf)
ggplot(perf)
ggplot(pred.obj)
View(GetPenalties)
dates <- as.Date(c("2017-06-08", "2017-06-07", "2017-06-06"))
class(dates)
for(date in dates) { print(date) }
print(dates[1])
print(dates[[1])
print(dates[[1]])
