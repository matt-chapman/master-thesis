source('~/Repos/master-thesis/Experiments/R/ChangeDetection/reader.R')
print(plot)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/reader.R')
print(plot)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/reader.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/reader.R')
View(data)
View(sums)
plot(dataset)
library(readr)
dataset <- read_csv("~/sums.csv", col_names = FALSE,
col_types = cols(X1 = col_date(format = "%d-%m-%Y")))
View(dataset)
plot(dataset)
plot(dataset type="l")
plot(dataset, type="l")
plot(dataset, type="l", clr="red")
par()
plot(dataset, type="l", col="blue")
plot(dataset, type="b", col="blue", xlab="Date", ylab="Total Tweets")
plot(dataset, type="l", col="blue", xlab="Date", ylab="Total Tweets")
plot(dataset, type="l", col="blue", xlab="Date", ylab="Total Tweets", las=1)
plot(dataset, type="l", col="blue", xlab="Date", ylab="Total Tweets")
library(readr)
data <- read_csv("~/ing.csv")
View(data)
library(readr)
data <- read_csv("~/ing.csv", col_names = FALSE,
col_types = cols(X1 = col_date(format = "%d-%m-%Y")))
View(data)
plot(data, type='l)
plot(data, type='l')
plot(data, type='l')
library(changepoint)
cpt.mean(data)
cpt.mean(data$X2)
changes <- cpt.mean(data$X2, method="BinSeg", penalty = "MBIC" , class = TRUE, minseglen = 2)
changes@cpts
plot(changes)
changes <- cpt.mean(data$X2, method="BinSeg", penalty = "MBIC" , class = TRUE, minseglen = 1)
plot(changes)
changes <- cpt.mean(data$X2, method="BinSeg", penalty = "MBIC" , class = TRUE)
plot(changes)
changes <- cpt.mean(data$X2, method="BinSeg", penalty = "MBIC" , class = TRUE, minseglen = 3)
plot(changes)
changes <- cpt.var(data$X2, method="BinSeg", penalty = "MBIC" , class = TRUE, minseglen = 3)
plot(changes)
changes <- cpt.var(data$X2, method="BinSeg", penalty = "MBIC" , class = TRUE)
changes <- cpt.var(data$X2, method="PELT", penalty = "MBIC" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", class = TRUE)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", class = TRUE)
plot(changes)
summary(changes)
changes <- cpt.mean(data$X2, method="PELT", class = TRUE)
summary(changes)
changes@cpts
changes <- cpt.var(data$X2, method="PELT", penalty = "MBIC" , class = TRUE)
changes@cpts
plot(changes)
changes <- cpt.mean(data$X2, method="PELT", penalty = "MBIC" , class = TRUE)
plot(changes)
changes@cpts
changes <- cpt.mean(data$X2, method="PELT", penalty = "SIC" , class = TRUE)
plot(changes)
changes <- cpt.mean(data$X2, method="PELT", penalty = "AIC" , class = TRUE)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "AIC" , class = TRUE)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "SIC" , class = TRUE)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "MBIC" , class = TRUE)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "Hannan-Quinn" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "Hannan-Quinn" , class = TRUE)
plot(changes)
changes <- cpt.mean(data$X2, method="PELT", penalty = "Hannan-Quinn" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "Hannan-Quinn" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "None" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "SICe" , class = TRUE)
changes <- cpt.var(data$X2, method="PELT", penalty = "SIC" , class = TRUE)
changes <- cpt.var(data$X2, method="PELT", penalty = "SICe" , class = TRUE)
changes <- cpt.var(data$X2, method="PELT", penalty = "SIC" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "BIC" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "MBIC" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "AIC" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "Hannan-Quinn" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "Asymptotic" , class = TRUE)
changes <- cpt.var(data$X2, method="PELT", penalty = "CROPS" , class = TRUE)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "CROPS", class = TRUE)
changes <- cpt.var(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,10))
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,10), diagnostic=TRUE)
changes <- cpt.var(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,10))
changes <- cpt.var(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,3))
plot(changes)
plot(changes, diagnostic=TRUE)
changes <- cpt.var(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 2)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 0.9)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 3)
plot(changes)
changes <- cpt.manvar(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 3)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 3)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 5)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 20)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 10)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 9.5)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 8)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 7)
plot(changes)
changes <- cpt.meanvar(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 6)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 6)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 2)
plot(changes)
changes <- cpt.var(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 3)
plot(changes)
changes <- cpt.mean(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 3)
plot(changes)
changes <- cpt.mean(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 1)
plot(changes)
changes <- cpt.mean(data$X2, method="PELT", penalty = "Manual", class = TRUE, pen.value = 10)
plot(changes)
changes <- cpt.mean(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = 10)
changes <- cpt.mean(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,20))
plot(changes)
plot(changes, diagnostic=TRUE)
changes <- cpt.mean(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,10))
changes <- cpt.mean(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,100))
plot(changes, diagnostic=TRUE)
changes <- cpt.mean(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,2000))
plot(changes, diagnostic=TRUE)
changes <- cpt.mean(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,50000))
plot(changes, diagnostic=TRUE)
plot(changes)
changes <- cpt.mean(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,50000), ncpts = 50)
changes <- cpt.mean(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,50000))
changes <- cpt.mean(data$X2, method="PELT", penalty = "CROPS", class = TRUE, pen.value = c(1,500000))
plot(changes)
plot(changes, diagnostic=TRUE)
library(changepoint)
set.seed(1)
x = c(rnorm(100,0,1),rnorm(100,0,10))
plot(x)
cpt.var(x,penalty="SIC",method="AMOC",class=FALSE)
ans=cpt.var(x,penalty="Asymptotic",pen.value=0.01,method="AMOC")
ans
cpts(ans)
x=c(rnorm(50,0,1),rnorm(50,0,10),rnorm(50,0,5),rnorm(50,0,1))
x
plot(c)
plot(x)
cpt.var(x,penalty="Manual",pen.value="log(2*log(n))",method="BinSeg",test.stat="CSS",Q=5,
class=FALSE)
cpt.var(x, penalty="Manual", pen.value="log(2*log(n)", method="BinSeg", test.stat="CSS", Q=5, class=FALSE)
cpt.var(x,penalty="Manual",pen.value="log(2*log(n))",method="BinSeg",test.stat="CSS",Q=5,class=FALSE)
x=c(rnorm(50,0,1),rnorm(50,0,10),rnorm(50,0,5),rnorm(50,0,1))
plot(x)
out=cpt.var(x,pen.value=c(log(length(x)),100*log(length(x))),penalty="CROPS",method="PELT")
cpts.full(out)
set.seed(1)
x=c(rnorm(50,0,1),rnorm(50,0,10),rnorm(50,0,5),rnorm(50,0,1))
plot(x)
out=cpt.var(x,pen.value=c(log(length(x)),100*log(length(x))),penalty="CROPS",method="PELT")
cpts.full(out)
plot(out)
pen.value.full(out)
plot(out,diagnostic=TRUE)
plot(out, ncpts=3)
x=c(rnorm(50,0,1),rnorm(50,0,10),rnorm(50,0,5),rnorm(50,0,1))
plot(x)
plot(x, type="l")
x=c(rnorm(50,0,1),rnorm(50,0,10),rnorm(50,0,5),rnorm(50,0,1))
plot(x, type="l")
plot(out)
plot(out, ncpts=3)
plot(out, ncpts=4)
plot(out, ncpts=7)
plot(out, ncpts=8)
plot(out, ncpts=6)
plot(out, ncpts=4)
plot(out, ncpts=43
plot(out, ncpts=3
plot(out, ncpts=3)
citation()
citation(changepoint)
citation("changepoint")
x<- citation("changepoint"); to Bibtex(x)
x
x<-citation("changepoint"); toBibtex(x)
browseVignettes()
citation("ggplot2")
x
data
colnames(data) <- c("Date", "Count")
data
pnorm(data)
curve(data)
plot(data)
pnorm
summary(data)
pnorm(data$Count)
data
summary(data)
density(data)
density(data$Count)
plot(density(data$Count))
shapiro.test(data$Count)
qqnorm(data$Count)
qqnorm(data$Count);qqline(data$Counts)
qqnorm(data$Count);qqline(data, col=2)
qqnorm(data$Count);qqline(data$Counts, col=2)
qqnorm(data$Count);qqline(data$Counts, col=1)
qqnorm(data$Count);qqline(data$Counts)
qqnorm(data$Count);qqline(data)
qqnorm(data$Count);qqline(data, col=2)
qqnorm(data$Count);qqline(data, col=1)
qqnorm(data$Count);
qqnorm(data$Count)
shapiro.test(data$Count)
qqplot(data$Count)
qqnorm(data$Count)
counts <- data$Count
counts
qqnorm(counts)
qqnorm(counts); qqline(counts)
qqnorm(counts); qqline(counts, column=2)
qqnorm(counts); qqline(counts, col=2)
qqnorm(counts); qqline(counts)
qqnorm(counts); qqline(counts, col=2)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/reader.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/reader.R')
changes <- cpt.meanvar(sums[["Freq"]], method="PELT", penalty = "CROPS",test.stat="Exponential", class = TRUE, minseglen = 2)
changes <- cpt.meanvar(sums[["Freq"]], method="PELT", penalty = "CROPS",test.stat="Exponential", class = TRUE, minseglen = 2, pen.value = c(1,5000))
plot(changes)
plot(changes, diagnostic=TRUE)
plot(changes, cpts=6)
plot(changes, ncpts=6)
data
library(readr)
x<-read_csv("~/ing.csv")
x
library(readr)
ing <- read_csv("~/ing.csv", col_names = FALSE,
col_types = cols(`01-01-2017` = col_date(format = "%d-%m-%Y")))
View(ing)
summary(ing)
y <- ing$X2
y
summary(y)
x <- y
summary(x)
shapiro.test(x)
with(beaver, tapply(temp, activ, shapiro.test)
)
plot(density(x))
qqnorm(x);qqline(x, col=2)
library(readr)
ing <- read_csv("~/ing.csv", col_names = FALSE,
col_types = cols(`01-01-2017` = col_date(format = "%d-%m-%Y")))
View(ing)
colnames(ing) <- c("Date","Count")
plot(ing, type="l")
plot(ing)
ing
plot(ing)
plot(ing, type="l")
library(readr)
ing <- read_csv("~/ing.csv", col_names = FALSE,
col_types = cols(`01-01-2017` = col_date(format = "%d-%m-%Y")))
View(ing)
library(readr)
ing <- read_csv("~/ing.csv", col_names = FALSE,
col_types = cols(X1 = col_date(format = "%d-%m-%Y")))
View(ing)
plot(ing)
colnames(ing) <- c("Date", "Postings")
plot(ing, type="l", col="blue")
x <- ing$Postings
shapiro.test(x)
qqnorm(x); qqline(x)
qqnorm(x); qqline(x, col=2)
class(x)
plot(x)
plot(x, type="l")
x[20:30]
plot(x[20:30], type="l")
y <- x[20:30]
plot(y)
cpt.mean(y)
cpt.mean(y, test.stat = CUSUM)
cpt.mean(y, test.stat = "CUSUM")
cpt.var(y)
cpt.meanvar(y)
cpt.meanvar(y, method="PELT")
cpt.meanvar(y, method="BinSeg", penalty="MBIC")
z<-cpt.meanvar(y, method="BinSeg", penalty="MBIC", class=TRUE)
plot(z)
plot(z, ncpts =2)
plot(z, ncpts = 1)
plot(z, ncpts = 3)
plot(z, ncpts = 3)
z<-cpt.meanvar(y, method="PELT", penalty="MBIC", class=TRUE)
plot(z, ncpts = 3)
plot(z)
plot(z)
z<-cpt.meanvar(y, method="PELT", class=TRUE)
plot(z)
summary(z)
plot(x)
plot(x, type="l")
x[20:40]
y <- x[20:40]
plot(y, type="l")
cpt.mean(y)
plot(cpt.mean(y))
plot(cpt.mean(y, method="PELT"))
z<- cpt.mean(y, method="PELT")
z
z<- cpt.mean(y, method="PELT", penalty="asymptotic")
z<- cpt.mean(y, method="PELT", penalty="asympotic")
z<- cpt.mean(y, method="PELT", penalty = "Hannan-Quinn")
z
z<- cpt.mean(y, method="PELT", penalty = "CROPS", pen.value = c(log(length(y)) ,100*log(length(y))))
plot(z, diagnostic=TRUE)
z<- cpt.mean(y, method="PELT", penalty = "CROPS", pen.value = c(log(length(y)) ,1000*log(length(y))))
plot(z, diagnostic=TRUE)
z<- cpt.mean(y, method="PELT", penalty = "CROPS", pen.value = c(log(length(y)) ,10000*log(length(y))))
plot(z, diagnostic=TRUE)
z<- cpt.mean(y, method="PELT", penalty = "CROPS", pen.value = c(log(length(y)) ,100000*log(length(y))))
plot(z, diagnostic=TRUE)
log(length(y))
100*log(length(y))
addinexamples:::reformatAddin()
addinexamples:::reformatAddin()
plot(ing)
plot(ing, type="l")
plot(ing, type="c")
plot(ing, type="b")
plot(ing, type="f")
plot(ing, type="d")
plot(ing, type="s")
plot(ing, type="h")
plot(ing, type="b")
plot(ing, type="c")
plot(ing, type="S")
plot(ing, type="s")
plot(ing, type="S")
plot(ing, type="s")
plot(ing, type="l")
cpt.meanvar(ing, method="PELT", penalty = CROPS, pen.value = c(log(length(ing)), 100*log(length(ing))))
cpt.meanvar(ing$Postings, method="PELT", penalty = CROPS, pen.value = c(log(length(ing)), 100*log(length(ing))))
cpt.meanvar(ing$Postings, method="PELT", penalty = "CROPS", pen.value = c(log(length(ing)), 100*log(length(ing))))
z<-cpt.meanvar(ing$Postings, method="PELT", penalty = "CROPS", pen.value = c(log(length(ing)), 100*log(length(ing))), class=TRUE)
z
plot(z, diagnostic=TRUE)
plot(z, ncpts=3)
plot(z, ncpts=7)
plot(z, ncpts=1)
z@cpts.full
plot(z, ncpts=9)
z<-cpt.var(ing$Postings, method="PELT", penalty = "CROPS", pen.value = c(log(length(ing)), 100*log(length(ing))), class=TRUE)
z@cpts.full
plot(z, ncpts=3)
plot(z, ncpts=4)
plot(z, ncpts=2)
plot(z, diagnostic=TRUE)
plot(z, ncpts=6)
plot(z, ncpts=4)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/reader.R')
library(readr)
library(readr)
rabobank <- read_csv("~/Repos/master-thesis/Data/rabobank.csv",
col_types = cols(Date = col_date(format = "%d-%m-%Y")))
View(rabobank)
plot(rabobank, type="l")
cpt.mean(rabobank)
library(changepoint)
cpt.var(rabobank)
cpt.var(rabobank$Postings)
cpt.var(rabobank$Postings, method="PELT")
rabchanges<-cpt.var(rabobank$Postings, method="PELT", class=TRUE)
plot(rabchanges)
rabchanges@cpts
plot(rabobank, type="l")
abline(x=rabchanges@cpts)
abline(v=rabchanges@cpts)
abline(v=as.numeric(rabobank$Date[rabchanges@cpts])
)
abline(v=as.numeric(rabobank$Date[rabchanges@cpts]))
plot(rabobank, type="l")
abline(v=as.numeric(rabobank$Date[rabchanges@cpts]), col="red")
abline(v=as.numeric(rabobank$Date[rabchanges@cpts]), col="red", lty=2)
abline(v=as.numeric(rabobank$Date[rabchanges@cpts]), col="red", lty="dashed")
plot(rabobank, type="l")
abline(v=as.numeric(rabobank$Date[rabchanges@cpts]), col="red", lty="dashed")
plot(rabobank, type="l")
abline(v=as.numeric(rabobank$Date[rabchanges@cpts]), col="red", lty="dashed", lwt=3)
abline(v=as.numeric(rabobank$Date[rabchanges@cpts]), col="red", lty="dashed", lwd=3)
plot(rabobank, type="l", lwd=2, col="blue")
abline(v=as.numeric(rabobank$Date[rabchanges@cpts]), col="red", lty="dashed", lwd=3)
length(seq.Date(from=as.Date("2017/01/01"), to=as.Date("2017/02/28"), by="day"))
runif(59)
runif(59, min=1, max=100)
plot(runif(59, min=1, max=100))
plot(rnorm(59, 50, 1))
plot(rnorm(59, 1, 2))
plot(rnorm(59, 1, 1))
plot(rnorm(59, 100, 0.1))
plot(rnorm(59, 100, 0.5))
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
generateDate()
plot(generateDate())
View(generateDate())
seq.Date(from=as.Date("2017/01/01"), to=as.Date("2017/02/28"), by="day")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
generateDate()
plot(generateDate())
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
p <- generateDate()
p
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
p <- generateDate()
p
plot(p)
p[35:50] * 100
p[Postings,35:50] * 100
p[Postings]
p
p$Postings
p[2,15:30]
p$Postings[30:50 * 20]
p$Postings[30:50] * 20
plot(p)
p$Postings[30:50] =* 20
p$Postings[30:50] *= 20
p$Postings[30:50] = p$Postings[30:50] * 10
plot(p)
p <- generateDate
p <- generateDate()
p
p$Postings[30:50] = p$Postings[30:50] * 3
plot(p)
plot(p, type="line")
library(changepoint)
cpt.mean(p)
cpt.mean(p$Postings)
cpt.mean(p$Postings, method="PELT")
cpt.mean(p$Postings, method="AMOC",)
plot(cpt.mean(p$Postings, method="AMOC",))
shapiro.test(p$Postings)
qqmean(p$Postings)
qqplot(p$Postings)
qqnorm(p$Postings)
p <- generateDate()
qqnorm(p$Postings)
shapiro.test(p$Postings)
qqline(p$Postings)
qqline(p$Postings, col="red")
shapiro.test(p$Postings)
qqnorm(p$Postings)
qqline(p$Postings, col="red")
addinexamples:::reformatAddin()
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
generateData()
generateData(100,2)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
generateData(100,2)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
generateData(100,2)
generateData(100,2,"test.csv")
generateDate
generateData
generateData(mean=100,sd=2,n=200)
generateData(mean=100,sd=2)
generateData(mean=100,sd=2,n=200)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/generator.R')
generateData(mean=100,sd=2,n=200)
rabobank
plot(rabobank)
plot(rabobank, type="l")
cpt.var(rabobank$Postings, method="PELT", penalty = "CROPS", pen.value = c(log(length(rabobank)), 100*log(length(rabobank))))
results <- cpt.var(rabobank$Postings, method="PELT", penalty = "CROPS", pen.value = c(log(length(rabobank)), 100*log(length(rabobank))), class=TRUE)
plot(c, diagnostic=TRUE)
plot(results, diagnostic=TRUE)
plot(results, ncpts=2)
plot(results, ncpts=4)
plot(results, ncpts=8)
plot(results, diagnostic=TRUE)
