GetPenalties("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
GetPenalties("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
GetPenalties("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
GetPenalties("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment("~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
ComparePenalties(method = "PELT", input = "~/Repos/master-thesis/Data/rabobank.csv", daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=ing, daily = TRUE)
RunExperiment(input=reddit, daily = TRUE)
RunExperiment(input=ing, daily = TRUE)
RunExperiment(input=rabobank, daily = TRUE)
RunExperiment(input=rabo, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabo, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabo, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabo, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabo, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabo, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabo, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
stuff <- ProcessData(rabobank)
stuff <- ProcessData(rabobank[1])
plot(stuff, type="l")
par(mfrow = c(1,1))
plot(stuff, type="l")
abline(v=as.Date("2017-02-01"))
abline(v=as.Date("2017-02-02"))
abline(v=as.Date("2017-02-10"))
abline(v=as.Date("2017-02-09"))
library(readr)
rabobank_points <- read_csv("~/Repos/master-thesis/Data/rabobank_points.csv",
col_names = FALSE, col_types = cols(Points = col_date(format = "%Y-%m-%d")))
View(rabobank_points)
list
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
View(points)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
View(points)
View(points)
points
as.vector(points)
as.vector(points[1,])
as.vector(points[,1])
as.vector(points[,2])
as.vector(points[,1])
test <- as.vector(points[,1])
test
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
points
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
View(points)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
points
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
addinexamples:::reformatAddin()
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
RunExperiment(input=rabobank, daily = TRUE)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
abline(v=30)
abline(v=35)
abline(v=34)
abline(v=32)
abline(v=33)
abline(v=40)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
ComparePenalties(rabobank)
ComparePenalties(input=rabobank)
GetPenalties(input=rabobank)
RunExperiment(input=rabobank, daily = TRUE)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(input=rabobank, daily = TRUE)
GetPenalties(input=rabobank)
ComparePenalties(input=rabobank)
RunExperiment(input=rabobank, daily = TRUE)
ComparePenalties(input=rabobank)
GetPenalties(input=rabobank)
RunExperiment(input=rabobank, daily = TRUE)
plot(cars)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(rabobank)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(rabobank)
install.packages("DiagrammeR")
library(DiagrammeR)
grViz("
digraph {
layout = twopi
node [shape = circle]
A -> {B C D}
}")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
hist(rabodata)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
hist(rabodata$Freq)
hist(redditdata$Freq)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
par(mfrow = c(1,3))
hist(norm)
hist(binom)
hist(pois)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
par(mfrow = c(3,1))
hist(norm)
hist(binom)
hist(pois)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
par(mfrow = c(1,3))
hist(norm)
hist(binom)
hist(pois)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(1,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(3,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 2)
binom <- rbinom(n = 200, size = 20, prob = 0.2)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 1)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 50)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, mean = 10)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, mean = 100)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
par(mfrow = c(2,3))
hist(norm)
hist(binom)
hist(pois)
hist(exp)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq)
hist(redditdata$Freq)
hist(ingdata$Freq)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq)
hist(redditdata$Freq)
hist(ingdata$Freq)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,2))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq)
hist(redditdata$Freq)
hist(ingdata$Freq)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,3))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq)
hist(redditdata$Freq)
hist(ingdata$Freq)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1)
set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
#set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
#set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
#set.seed(12345)
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,3))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq, main="Rabobank")
hist(redditdata$Freq, main="Reddit")
hist(ingdata$Freq, main="ING")
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
norm <- rnorm(n = 200, mean = 10, sd = 1)
binom <- rbinom(n = 200, size = 20, prob = 0.5)
pois <- rpois(n = 200, lambda = 3)
exp <- rexp(n = 200, rate = 100)
gam <- rgamma(n = 200, rate = 1, scale = 1, shape = 1)
par(mfrow = c(2,3))
hist(norm, main="Normal")
hist(binom, main="Binomial")
hist(pois, main="Poisson")
hist(exp, main="Exponential")
hist(gam, main="Gamma")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,3))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq, main="Rabobank", ylab = "Postings")
hist(redditdata$Freq, main="Reddit", ylab = "Postings")
hist(ingdata$Freq, main="ING", ylab = "Postings")
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
par(mfrow = c(1,3))
rabodata <- ProcessData(rabobank)
redditdata <- ProcessData(reddit)
ingdata <- ProcessData(ing)
hist(rabodata$Freq, main="Rabobank", xlab = "Postings")
hist(redditdata$Freq, main="Reddit", xlab = "Postings")
hist(ingdata$Freq, main="ING", xlab = "Postings")
RunExperiment(ing)
RunExperiment(reddit)
RunExperiment(rabobank)
RunExperiment(reddit)
RunExperiment(ing)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(ing)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(ing)
RunExperiment(rabobank)
RunExperiment(ing)
RunExperiment(rabobank)
RunExperiment(reddit)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(reddit)
source('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(reddit)
library(ROCR)
install.packages("ROCR")
library(ROCR)
y <- c(T,T,F,F)
predictions <- c(T,F,F,F)
pred <- prediction(predictions, y)
pred <- prediction(c(0.1,.5,.3,.8,.9,.4,.9,.5), c(0,0,0,1,1,1,1,1))
perf <- performance(pred, "tpr", "fpr")
plot(perf)
data("ROCR.simple")
predictions <- c(1,1,0,0)
labels <- c(1,0,1,0)
pred <- prediction(predictions, labels)
plot(pred)
pred
RP.perf <- performance(pred,"f")
plot(RP.perf)
predict <- sample(c(0,1), 20, replace=T)
true <- sample(c(0,1), 20, replace=T)
pred <- prediction(predictions = predict, labels = true)
RP.perf <- performance(pred, "f")
plot(RP.perf)
predict <- sample(c(0,1), 20, replace=T)
true <- sample(c(0,1), 20, replace=T)
retrieved <- sum(predict)
precision <- sum(predict & true) / retrieved
recall <- sum(predict & true) / sum(true)
Fmeasure <- 2 * precision * recall / (precision + recall)
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
debugSource('~/Repos/master-thesis/Experiments/R/ChangeDetection/experiment.R')
RunExperiment(ing)
mean.pelt@cpts
vec <- 1:10
vec
